param (PROP_AX prop_ax.ghi () "")
param (PROP prop.ghi (PROP_AX) "")
param (PRED_AX pred_ax.ghi (PROP_AX) "")
param (PRED pred.ghi (PROP_AX PROP PRED_AX) "")

kindbind (obj nat)

tvar (wff ph ps ch)
tvar (nat A B C D)
var (nat x y z)

# Similar to ax-8, but for tvars instead of vars.
stmt (ax-eqtr () ()
  (-> (/\ (= A B) (= A C)) (= B C)))

# Similar to ax-9, but expanded to nat's instead of var's,
# and requiring a free variable constraint.
stmt (ax-tyex ((A x)) ()
  (-. (A. x (-. (= x A)))))


# Properties of natural numbers: Peano axioms

term (nat (0))
term (nat (S A))
term (nat (+ A B))
term (nat (* A B))

# Equality axiom for addition
stmt (addeq12 () ()
    (-> (/\ (= A B) (= C D)) (= (+ A C) (+ B D))))

# Equality axiom for multiplication
stmt (muleq12 () ()
    (-> (/\ (= A B) (= C D)) (= (* A C) (* B D))))

stmt (pa_ax1 () () (-. (= (0) (S A))))

# Note that the biconditional captures equality properties of S as
# well as the traditional Peano axiom 2.
stmt (pa_ax2 () ()
  (<-> (= A B) (= (S A) (S B))))
stmt (pa_ax3 () ()
  (= (+ A (0)) A))
stmt (pa_ax4 () ()
  (= (+ A (S B)) (S (+ A B))))
stmt (pa_ax5 () ()
  (= (* A (0)) (0)))
stmt (pa_ax6 () ()
  (= (* A (S B)) (+ (* A B) A)))

stmt (pa_ind ((ph y)) ()
  (-> (/\ (A. x (-> (= x (0)) ph))
          (A. y (-> (A. x (-> (= x y) ph))
                    (A. x (-> (= x (S y)) ph)))))
      (A. x ph)))

